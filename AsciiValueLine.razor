<span class="hxdp-asciivalue-line">
    <CascadingValue Value="@Parent">
        @for (var i = 0; i < Data.Length; ++i)
        {
            <AsciiValue Value="@Data[i]" Coordinate="(i, Index)" @ref="AsciiValueRef" />
        }
    </CascadingValue>
</span>

@code {
    [Parameter]
    public byte[] Data { get; set; } = Array.Empty<byte>();

    public List<AsciiValue> AsciiValues { get; } = new();
    AsciiValue AsciiValueRef
    {
        set
        {
            AsciiValues.Add(value);
        }
    }

    [Parameter]
    public int Index { get; set; } = 0;

    [Parameter]
    public HexDump? Parent { get; set; }

    internal void HoverAsciiValue(int Coordinate)
    {
        AsciiValues[Coordinate].Hover();
    }

    internal void UnhoverAsciiValue(int Coordinate)
    {
        AsciiValues[Coordinate].Unhover();
    }

    internal void HighlightAsciiValue(int Coordinate)
    {
        AsciiValues[Coordinate].Highlight();
    }

    internal void UnhighlightAsciiValue(int Coordinate)
    {
        AsciiValues[Coordinate].Unhighlight();
    }

    public override string ToString()
    {
        return string.Join(string.Empty, Data.Select(x => Helper.AsciiFromByte(x)));
    }

    public string ToString(bool FillUpLine)
    {
        var str = this.ToString();
        if (!FillUpLine) return str;
        if (str.Length < 16) str += new string(' ', 16 - str.Length);
        return str;
    }
}
